{"ast":null,"code":"var _jsxFileName = \"/Users/vinaykumar/Downloads/ReactTS_Contact_Visuals-main/src/components/Map.tsx\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nconst Map = ({\n  countries\n}) => {\n  const zoom = 4;\n  // focusing position with lat- long of India\n  const position = [20.5937, 78.9629];\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    className: \"h-screen\",\n    center: position,\n    zoom: zoom,\n    scrollWheelZoom: true,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"<a href=\\\"https://github.com/vikas-parmar\\\" target=\\\"_blank\\\">VIKAS PARMAR</a>\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), countries.map(country => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [country.countryInfo.lat, country.countryInfo.long],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold\",\n            children: country.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Active: \", country.active]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Recovered: \", country.recovered]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Deaths: \", country.deaths]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, country.country, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Map","countries","zoom","position","className","center","scrollWheelZoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","map","country","countryInfo","lat","long","active","recovered","deaths","_c","$RefreshReg$"],"sources":["/Users/vinaykumar/Downloads/ReactTS_Contact_Visuals-main/src/components/Map.tsx"],"sourcesContent":["import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\n\ninterface MapProps {\n  countries: any[]; // country data format here\n}\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\nconst Map: React.FC<MapProps> = ({ countries }) => {\n\n  const zoom = 4;\n  // focusing position with lat- long of India\n  const position: [number, number] = [20.5937, 78.9629];\n  \n  return (\n    <MapContainer\n      className=\"h-screen\"\n      center={position}\n      zoom={zoom}\n      scrollWheelZoom={true}\n    >\n      <TileLayer\n        attribution='<a href=\"https://github.com/vikas-parmar\" target=\"_blank\">VIKAS PARMAR</a>'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {countries.map((country) => (\n        <Marker\n          key={country.country}\n          position={[country.countryInfo.lat, country.countryInfo.long]}\n        >\n          <Popup>\n            <div>\n              <h3 className=\"font-bold\">{country.country}</h3>\n              <p>Active: {country.active}</p>\n              <p>Recovered: {country.recovered}</p>\n              <p>Deaths: {country.deaths}</p>\n            </div>\n          </Popup>\n        </Marker>\n      ))}\n    </MapContainer>\n  );\n};\n\nexport default Map;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxBF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;AAEF,MAAMG,GAAuB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAEjD,MAAMC,IAAI,GAAG,CAAC;EACd;EACA,MAAMC,QAA0B,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;EAErD,oBACEX,OAAA,CAACN,YAAY;IACXkB,SAAS,EAAC,UAAU;IACpBC,MAAM,EAAEF,QAAS;IACjBD,IAAI,EAAEA,IAAK;IACXI,eAAe,EAAE,IAAK;IAAAC,QAAA,gBAEtBf,OAAA,CAACL,SAAS;MACRqB,WAAW,EAAC,gFAA4E;MACxFC,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACDZ,SAAS,CAACa,GAAG,CAAEC,OAAO,iBACrBvB,OAAA,CAACJ,MAAM;MAELe,QAAQ,EAAE,CAACY,OAAO,CAACC,WAAW,CAACC,GAAG,EAAEF,OAAO,CAACC,WAAW,CAACE,IAAI,CAAE;MAAAX,QAAA,eAE9Df,OAAA,CAACH,KAAK;QAAAkB,QAAA,eACJf,OAAA;UAAAe,QAAA,gBACEf,OAAA;YAAIY,SAAS,EAAC,WAAW;YAAAG,QAAA,EAAEQ,OAAO,CAACA;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChDrB,OAAA;YAAAe,QAAA,GAAG,UAAQ,EAACQ,OAAO,CAACI,MAAM;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BrB,OAAA;YAAAe,QAAA,GAAG,aAAW,EAACQ,OAAO,CAACK,SAAS;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrCrB,OAAA;YAAAe,QAAA,GAAG,UAAQ,EAACQ,OAAO,CAACM,MAAM;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,GAVHE,OAAO,CAACA,OAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWd,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACS,EAAA,GAlCItB,GAAuB;AAoC7B,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}